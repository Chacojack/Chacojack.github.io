<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZejianChai&#39;s Note</title>
  <subtitle>Android开发者</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chacojack.github.io/"/>
  <updated>2016-07-06T16:11:44.000Z</updated>
  <id>https://chacojack.github.io/</id>
  
  <author>
    <name>柴泽建</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android应用配置签名</title>
    <link href="https://chacojack.github.io/2016/07/06/Android%E5%BA%94%E7%94%A8%E9%85%8D%E7%BD%AE%E7%AD%BE%E5%90%8D/"/>
    <id>https://chacojack.github.io/2016/07/06/Android应用配置签名/</id>
    <published>2016-07-06T15:03:50.000Z</published>
    <updated>2016-07-06T16:11:44.000Z</updated>
    
    <content type="html">&lt;p&gt;Android应用在Debug模式下ADT会自动用默认的密钥和证书来进行签名，但是在发布的时候就需要一个手动配置。&lt;br&gt;生成签名的方法见我的上一篇文章：&lt;a href=&quot;https://chacojack.github.io/2016/07/06/Java%E7%AD%BE%E5%90%8D-keystore%E6%96%87%E4%BB%B6%E7%9A%84%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/&quot;&gt;生成Java签名.keystore文件的方法&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;为Android应用配置签名&quot;&gt;&lt;a href=&quot;#为Android应用配置签名&quot; class=&quot;headerlink&quot; title=&quot;为Android应用配置签名&quot;&gt;&lt;/a&gt;为Android应用配置签名&lt;/h2&gt;&lt;h3 id=&quot;代码添加&quot;&gt;&lt;a href=&quot;#代码添加&quot; class=&quot;headerlink&quot; title=&quot;代码添加&quot;&gt;&lt;/a&gt;代码添加&lt;/h3&gt;&lt;p&gt;在Android应用的build.gradle文件的android中添加如下代码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;signingConfigs &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    debug &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        keyAlias &amp;apos;androiddebugkey&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        keyPassword &amp;apos;android&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        storeFile file(&amp;apos;../KEYSTORE/debug.keystore&amp;apos;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        storePassword &amp;apos;123456&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中keyAlias对应签名中的别名，keyPassword对应别名密码，storeFile是签名的文件路径，storePassword是签名的密码。&lt;/p&gt;
&lt;h3 id=&quot;可视化添加&quot;&gt;&lt;a href=&quot;#可视化添加&quot; class=&quot;headerlink&quot; title=&quot;可视化添加&quot;&gt;&lt;/a&gt;可视化添加&lt;/h3&gt;&lt;p&gt;通过快捷键&lt;code&gt;Command+;&lt;/code&gt;，或者是&lt;code&gt;File-&amp;gt;Project Structure&lt;/code&gt;打开Project Structure对话框，然后选择&lt;code&gt;Signing&lt;/code&gt;标签，然后在其中我们可以添加签名。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../images/7513CAB4-B492-434A-B496-76670B695210.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;通过途中红框标出的加号添加一个签名，在右侧填写信息即可，之后点击OK。这种方法，Android Studio会自动为我们添加上面的代码。&lt;/p&gt;
&lt;h3 id=&quot;使用签名&quot;&gt;&lt;a href=&quot;#使用签名&quot; class=&quot;headerlink&quot; title=&quot;使用签名&quot;&gt;&lt;/a&gt;使用签名&lt;/h3&gt;&lt;p&gt;签名是要在打包的时候使用。打包一般用debug包和release包，因为我们的签名是为debug准备的，那么下来我演示打debug包时怎么使用。&lt;/p&gt;
&lt;p&gt;还是在build.gradle的android中添加如下代码&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;buildTypes &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    debug &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        signingConfig singingConfigs.debug&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样我们在打debug包的时候就会带上这个签名了。&lt;/p&gt;
&lt;h2 id=&quot;为什么Android应用需要签名&quot;&gt;&lt;a href=&quot;#为什么Android应用需要签名&quot; class=&quot;headerlink&quot; title=&quot;为什么Android应用需要签名&quot;&gt;&lt;/a&gt;为什么Android应用需要签名&lt;/h2&gt;&lt;p&gt;这里我在网上找了一些资料总结了一下，这个理解一下就可以了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;应用程序升级——当你对应用程序进行升级时，如果你想用户平稳的升级，那么，你就需要签上相同的证书。当系统安装一个升级应用程序时，如果新版本的证书与老版本的证书有匹配的话，那么，系统才会允许进行升级。如果你没有为版本签上合适的证书，当你安装时，你需要给应用程序指定一个新的包名——在这种情况下，用户安装的新版本，被当作是一个全新的应用程序。&lt;/li&gt;
&lt;li&gt;应用程序模块化——如果应用程序请求的话，Android系统允许签有相同证书的应用程序运行在相同的进程里，这样，系统就会把它们看作是一个单一的应用程序。用这种方法配置应用程序，用户可以选择更新每个独立的模块。&lt;/li&gt;
&lt;li&gt;代码/数据权限共享——Android系统提供了基于签名的权限检查，因此，如果应用程序间签有特定的证书，那么，它们之间可以共享功能。通过多个程序签有相同的证书并且使用基于签名的权限检查，你的程序可以以一种安全的方式共享代码和数据。还有一个决定签名策略的重要因素是：如何设定key的有效期。&lt;/li&gt;
&lt;li&gt;发送者的身份认证，由于开发商可能通过使用相同的Package Name来混淆替换已经安装的程序，以此保证签名不同的包不被替换&lt;/li&gt;
&lt;li&gt;保证信息传输的完整性，签名对于包中的每个文件进行处理，以此确保包中内容不被替换。&lt;/li&gt;
&lt;li&gt;防止交易中的抵赖发生， 市场对软件的要求&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Android中使用签名的相关知识请参考以下文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ijavagos.iteye.com/blog/1057666&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android签名&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://zhidao.baidu.com/link?url=6KhdpKM92muVankVS0LSKFztL5KN_2DQ5dtDHS2EbueJzZoADtRb06Uc_9KmWcuBxELs1aBk7Sw6Rqtob49bB-56DSPN-HNpD43wFx2QwRW&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何发布android 应用程序，app增加签名证书&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Android应用在Debug模式下ADT会自动用默认的密钥和证书来进行签名，但是在发布的时候就需要一个手动配置。&lt;br&gt;生成签名的方法见我的上一篇文章：&lt;a href=&quot;https://chacojack.github.io/2016/07/06/Java%E7%AD%B
    
    </summary>
    
      <category term="Android" scheme="https://chacojack.github.io/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>生成Java签名.keystore文件的方法</title>
    <link href="https://chacojack.github.io/2016/07/06/Java%E7%AD%BE%E5%90%8D-keystore%E6%96%87%E4%BB%B6%E7%9A%84%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/"/>
    <id>https://chacojack.github.io/2016/07/06/Java签名-keystore文件的生成方法/</id>
    <published>2016-07-06T13:21:01.000Z</published>
    <updated>2016-07-06T14:47:06.000Z</updated>
    
    <content type="html">&lt;p&gt;今天接触到了Java签名相关的东西，想要学习一下，很多东西介绍的不全面，前因后果也介绍的不是很清楚。找了很多地方终于了解了大概，整理在这里。考虑到很多查看的人的需求点不同，也没有必要把所有的东西放在一遍文章中，导致文章很长。这篇文章就只介绍Java签名.keystore文件的生成方法，和相关的操作。&lt;/p&gt;
&lt;h2 id=&quot;生成方法&quot;&gt;&lt;a href=&quot;#生成方法&quot; class=&quot;headerlink&quot; title=&quot;生成方法&quot;&gt;&lt;/a&gt;生成方法&lt;/h2&gt;&lt;p&gt;在终端输入：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;keytool -genkey -alias javadebugkey(别名) -keypass java123(别名密) -keyalg RSA(生成签名算法) -keysize 1024(密钥长度) -validity 365(有效期，天单位) -keystore javadebugkey.keystore(生成的keystore文件)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;括号中是前面字符串含义的说明，这些信息在有的时候是要用的。别名，别名密码等。在终端输入之后，自定义自己的.keystore信息之后把括号内容去掉。之后回车，先会让你输入密码，例如123456，之后会提示让你输入相关信息，输入即可，中国是CN。&lt;/p&gt;
&lt;h2 id=&quot;对-keystore文件的操作&quot;&gt;&lt;a href=&quot;#对-keystore文件的操作&quot; class=&quot;headerlink&quot; title=&quot;对.keystore文件的操作&quot;&gt;&lt;/a&gt;对.keystore文件的操作&lt;/h2&gt;&lt;h3 id=&quot;查看&quot;&gt;&lt;a href=&quot;#查看&quot; class=&quot;headerlink&quot; title=&quot;查看&quot;&gt;&lt;/a&gt;查看&lt;/h3&gt;&lt;p&gt;查看一个keystore文件的内部信息：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;keytool -list  -v -keystore javadebugkey.keystore -storepass 123456&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;就可以看到相关信息。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;密钥库类型: JKS&lt;br&gt;密钥库提供方: SUN&lt;/p&gt;
&lt;p&gt;您的密钥库包含 1 个条目&lt;/p&gt;
&lt;p&gt;别名: javadebugkey&lt;br&gt;创建日期: 2016-7-6&lt;br&gt;条目类型: PrivateKeyEntry&lt;br&gt;证书链长度: 1&lt;br&gt;证书[1]:&lt;br&gt;所有者: CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown&lt;br&gt;发布者: CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown&lt;br&gt;序列号: 48eff7e5&lt;br&gt;有效期开始日期: Wed Jul 06 21:58:54 CST 2016, 截止日期: Thu Jul 06 21:58:54 CST 2017&lt;br&gt;证书指纹:&lt;br&gt;     MD5: E7:8B:2F:27:05:3B:35:63:49:FD:79:8A:B5:2A:C6:AE&lt;br&gt;     SHA1: F7:47:F2:71:72:9A:88:43:60:74:AA:2B:65:69:15:03:37:CB:CB:31&lt;br&gt;     SHA256: 77:F6:5B:29:22:85:49:CB:44:1B:A4:4E:BD:3F:B4:2B:D6:B3:05:E1:46:B5:56:7E:F0:AD:C8:08:CA:AB:CE:DE&lt;br&gt;     签名算法名称: SHA256withRSA&lt;br&gt;     版本: 3&lt;/p&gt;
&lt;p&gt;扩展: &lt;/p&gt;
&lt;p&gt;#1: ObjectId: 2.5.29.14 Criticality=false&lt;br&gt;SubjectKeyIdentifier [&lt;br&gt;KeyIdentifier [&lt;br&gt;0000: A7 11 32 79 F3 16 DD 7B   C5 DE 22 8C FC 70 47 BC  ..2y……”..pG.&lt;br&gt;0010: 4B 00 E0 A8                                        K…&lt;br&gt;]&lt;br&gt;]&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;导出证书&quot;&gt;&lt;a href=&quot;#导出证书&quot; class=&quot;headerlink&quot; title=&quot;导出证书&quot;&gt;&lt;/a&gt;导出证书&lt;/h3&gt;&lt;p&gt;终端输入：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;keytool -export -alias javadebugkey -keystore javadebugkey.keystore -file javadebugkey.crt(指定导出的证书) -storepass 123456&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;即可得到该签名的证书&lt;/p&gt;
&lt;h3 id=&quot;查看证书&quot;&gt;&lt;a href=&quot;#查看证书&quot; class=&quot;headerlink&quot; title=&quot;查看证书&quot;&gt;&lt;/a&gt;查看证书&lt;/h3&gt;&lt;p&gt;终端输入：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;keytool -printcert -file javadebugkey.crt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;得到结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 所有者: CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown&lt;br&gt;发布者: CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown&lt;br&gt;序列号: 48eff7e5&lt;br&gt;有效期开始日期: Wed Jul 06 21:58:54 CST 2016, 截止日期: Thu Jul 06 21:58:54 CST 2017&lt;br&gt;证书指纹:&lt;br&gt;     MD5: E7:8B:2F:27:05:3B:35:63:49:FD:79:8A:B5:2A:C6:AE&lt;br&gt;     SHA1: F7:47:F2:71:72:9A:88:43:60:74:AA:2B:65:69:15:03:37:CB:CB:31&lt;br&gt;     SHA256: 77:F6:5B:29:22:85:49:CB:44:1B:A4:4E:BD:3F:B4:2B:D6:B3:05:E1:46:B5:56:7E:F0:AD:C8:08:CA:AB:CE:DE&lt;br&gt;     签名算法名称: SHA256withRSA&lt;br&gt;     版本: 3&lt;/p&gt;
&lt;p&gt;扩展: &lt;/p&gt;
&lt;p&gt;#1: ObjectId: 2.5.29.14 Criticality=false&lt;br&gt;SubjectKeyIdentifier [&lt;br&gt;KeyIdentifier [&lt;br&gt;0000: A7 11 32 79 F3 16 DD 7B   C5 DE 22 8C FC 70 47 BC  ..2y……”..pG.&lt;br&gt;0010: 4B 00 E0 A8                                        K…&lt;br&gt;]&lt;br&gt;]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;删除信息&quot;&gt;&lt;a href=&quot;#删除信息&quot; class=&quot;headerlink&quot; title=&quot;删除信息&quot;&gt;&lt;/a&gt;删除信息&lt;/h3&gt;&lt;p&gt;删除一个条目&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;keytool -delete -alias javadebugkey -keystore javadebugkey.keystore -storepass 123456&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;之后用上面的方法查看结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;密钥库类型: JKS&lt;br&gt;密钥库提供方: SUN&lt;/p&gt;
&lt;p&gt;您的密钥库包含 0 个条目&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;导入证书&quot;&gt;&lt;a href=&quot;#导入证书&quot; class=&quot;headerlink&quot; title=&quot;导入证书&quot;&gt;&lt;/a&gt;导入证书&lt;/h3&gt;&lt;p&gt;将我们刚才的证书导入：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;keytool -import -alias java -keypass java123 -file javadebugkey.crt -keystore javadebugkey.keystore -storepass 123456&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再次查看文件信息：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;密钥库类型: JKS&lt;br&gt;密钥库提供方: SUN&lt;/p&gt;
&lt;p&gt;您的密钥库包含 1 个条目&lt;/p&gt;
&lt;p&gt;别名: java&lt;br&gt;创建日期: 2016-7-6&lt;br&gt;条目类型: trustedCertEntry&lt;/p&gt;
&lt;p&gt;所有者: CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown&lt;br&gt;发布者: CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown&lt;br&gt;序列号: 48eff7e5&lt;br&gt;有效期开始日期: Wed Jul 06 21:58:54 CST 2016, 截止日期: Thu Jul 06 21:58:54 CST 2017&lt;br&gt;证书指纹:&lt;br&gt;     MD5: E7:8B:2F:27:05:3B:35:63:49:FD:79:8A:B5:2A:C6:AE&lt;br&gt;     SHA1: F7:47:F2:71:72:9A:88:43:60:74:AA:2B:65:69:15:03:37:CB:CB:31&lt;br&gt;     SHA256: 77:F6:5B:29:22:85:49:CB:44:1B:A4:4E:BD:3F:B4:2B:D6:B3:05:E1:46:B5:56:7E:F0:AD:C8:08:CA:AB:CE:DE&lt;br&gt;     签名算法名称: SHA256withRSA&lt;br&gt;     版本: 3&lt;/p&gt;
&lt;p&gt;扩展: &lt;/p&gt;
&lt;p&gt;#1: ObjectId: 2.5.29.14 Criticality=false&lt;br&gt;SubjectKeyIdentifier [&lt;br&gt;KeyIdentifier [&lt;br&gt;0000: A7 11 32 79 F3 16 DD 7B   C5 DE 22 8C FC 70 47 BC  ..2y……”..pG.&lt;br&gt;0010: 4B 00 E0 A8                                        K…&lt;br&gt;]&lt;br&gt;]&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;更多操作&quot;&gt;&lt;a href=&quot;#更多操作&quot; class=&quot;headerlink&quot; title=&quot;更多操作&quot;&gt;&lt;/a&gt;更多操作&lt;/h3&gt;&lt;p&gt;更多操作请看keytool的帮助&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天接触到了Java签名相关的东西，想要学习一下，很多东西介绍的不全面，前因后果也介绍的不是很清楚。找了很多地方终于了解了大概，整理在这里。考虑到很多查看的人的需求点不同，也没有必要把所有的东西放在一遍文章中，导致文章很长。这篇文章就只介绍Java签名.keystore文件
    
    </summary>
    
      <category term="Java" scheme="https://chacojack.github.io/categories/Java/"/>
    
    
  </entry>
  
</feed>
